package bots.rulebasedbot;

import com.biotools.meerkat.Action;
import com.biotools.meerkat.Card;
import com.biotools.meerkat.GameInfo;
import com.biotools.meerkat.Player;
import com.biotools.meerkat.util.Preferences;

public class RuleBasedBot implements Player {

    private int ourSeat; // our seat for the current hand
    private Card c1, c2; // our hole cards
    private GameInfo gi; // general game information
    private Preferences prefs; // the configuration options for this bot

    public RuleBasedBot() {}

    @Override
    public void init(Preferences preferences) {
        this.prefs = preferences;
    }

    @Override
    public void holeCards(Card c1, Card c2, int seat) {
        this.c1 = c1;
        this.c2 = c2;
        this.ourSeat = seat;
    }

    public Preferences getPreferences() {
        return prefs;
    }

    @Override
    public Action getAction() {
        if (gi.isPreFlop()) {
            return null;
        } else {
            double toCall = gi.getAmountToCall(ourSeat);
            if (toCall == 0.0D) {
                return Action.checkAction();
            }
            return Action.callAction(toCall);
        }
    }

    @Override
    public void actionEvent(int i, Action action) {

    }

    @Override
    public void stageEvent(int i) {

    }

    @Override
    public void showdownEvent(int i, Card card, Card card1) {

    }

    @Override
    public void gameStartEvent(GameInfo gameInfo) {

    }

    @Override
    public void dealHoleCardsEvent() {

    }

    @Override
    public void gameOverEvent() {

    }

    @Override
    public void winEvent(int i, double v, String s) {

    }

    @Override
    public void gameStateChanged() {

    }

    public boolean getDebug() {
        return prefs.getBooleanPreference("DEBUG", false);
    }

    public void debug(String str) {
        if (getDebug()) {
            System.out.println(str);
        }
    }
}
