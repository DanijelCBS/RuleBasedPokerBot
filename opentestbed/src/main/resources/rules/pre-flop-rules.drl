package rules

import com.biotools.meerkat.Card;
import bots.rulebasedbot.Utility;
import bots.rulebasedbot.PlayerState;
import bots.rulebasedbot.PlayStyle;

global Double make0Threshold;
global Double make1Threshold;
global Double make2Threshold;
global Double make4Threshold;
global Double call1Threshold;
global Double call2Threshold;
global Integer numOfPlayersToAct;


rule "Determine suits"
    when
        $ps: PlayerState($card1: card1, $card2: card2, $card1.getSuit() == $card2.getSuit())
    then
        $ps.setSameSuit(true);
        update($ps);
end

rule "Starting hand rank - number of players is 5+, cards have same suit"
    when
        $ps: PlayerState(expectedNumOfPlayers >= 5, sameSuit == true, $card1: card1, $card2: card2)
    then
        $ps.setIR($card1.getRank() > $card2.getRank() ? Utility.IR7.get($card1.getRank()).get($card2.getRank()) :
                Utility.IR7.get($card2.getRank()).get($card1.getRank()));
        update($ps);
end

rule "Starting hand rank - number of players is 5+, cards do not have same suit"
    when
        $ps: PlayerState(expectedNumOfPlayers >= 5, sameSuit == false, $card1: card1, $card2: card2)
    then
        $ps.setIR(Utility.IR7.get($card1.getRank()).get($card2.getRank()));
        update($ps);
end

rule "Starting hand rank - number of players is 3 or 4, cards have same suit"
    when
        $ps: PlayerState(expectedNumOfPlayers <= 4, expectedNumOfPlayers > 2, sameSuit == true, $card1: card1, $card2: card2)
    then
        $ps.setIR($card1.getRank() > $card2.getRank() ? Utility.IR7.get($card1.getRank()).get($card2.getRank()) :
                Utility.IR4.get($card2.getRank()).get($card1.getRank()));
        update($ps);
end

rule "Starting hand rank - number of players is 3 or 4, cards do not have same suit"
    when
        $ps: PlayerState(expectedNumOfPlayers <= 4, expectedNumOfPlayers > 2, sameSuit == false, $card1: card1, $card2: card2)
    then
        $ps.setIR(Utility.IR4.get($card1.getRank()).get($card2.getRank()));
        update($ps);
end

rule "Starting hand rank - number of players is 1 or 2, cards have same suit"
    when
        $ps: PlayerState(expectedNumOfPlayers <= 2, sameSuit == true, $card1: card1, $card2: card2)
    then
        $ps.setIR($card1.getRank() > $card2.getRank() ? Utility.IR7.get($card1.getRank()).get($card2.getRank()) :
                Utility.IR2.get($card2.getRank()).get($card1.getRank()));
        update($ps);
end

rule "Starting hand rank - number of players greater than 4, cards do not have same suit"
    when
        $ps: PlayerState(expectedNumOfPlayers <= 2, sameSuit == false, $card1: card1, $card2: card2)
    then
        $ps.setIR(Utility.IR2.get($card1.getRank()).get($card2.getRank()));
        update($ps);
end

rule "Determine thresholds - tight and 1-2"
    when
        $ps: PlayerState(expectedNumOfPlayers <= 2, playStyle == PlayStyle.TIGHT)
    then
        drools.getKnowledgeRuntime().setGlobal("call1Threshold", -50 + 50 * numOfPlayersToAct);
        drools.getKnowledgeRuntime().setGlobal("call2Threshold", 150 + 50 * numOfPlayersToAct);
        drools.getKnowledgeRuntime().setGlobal("make1Threshold", -50 + 50 * numOfPlayersToAct);
        drools.getKnowledgeRuntime().setGlobal("make2Threshold", 150 + 50 * numOfPlayersToAct);
        drools.getKnowledgeRuntime().setGlobal("make4Threshold", 300);
end

rule "Determine thresholds - tight and 4-5"
    when
        $ps: PlayerState(expectedNumOfPlayers <= 4, expectedNumOfPlayers > 2, playStyle == PlayStyle.TIGHT, $smallBlind: smallBlind)
    then
        drools.getKnowledgeRuntime().setGlobal("call1Threshold", !$smallBlind ? 50 + 50 * numOfPlayersToAct : -75);
        drools.getKnowledgeRuntime().setGlobal("call2Threshold", !$smallBlind ? 200 + 50 * numOfPlayersToAct : 200);
        drools.getKnowledgeRuntime().setGlobal("make1Threshold", 50 + 50 * numOfPlayersToAct);
        drools.getKnowledgeRuntime().setGlobal("make2Threshold", 200 + 50 * numOfPlayersToAct);
        drools.getKnowledgeRuntime().setGlobal("make4Threshold", 580);
end

rule "Determine thresholds - tight and 5+"
    when
        $ps: PlayerState(expectedNumOfPlayers >= 5, playStyle == PlayStyle.TIGHT, $smallBlind: smallBlind)
    then
        drools.getKnowledgeRuntime().setGlobal("call1Threshold", !$smallBlind ? 70 * numOfPlayersToAct : 0);
        drools.getKnowledgeRuntime().setGlobal("call2Threshold", !$smallBlind ? 450 + 50 * numOfPlayersToAct : 450);
        drools.getKnowledgeRuntime().setGlobal("make1Threshold", 70 * numOfPlayersToAct);
        drools.getKnowledgeRuntime().setGlobal("make2Threshold", 450 + 50 * numOfPlayersToAct);
        drools.getKnowledgeRuntime().setGlobal("make4Threshold", 900);
end

rule "Determine thresholds - moderate and 1-2"
    when
        $ps: PlayerState(expectedNumOfPlayers <= 2, playStyle == PlayStyle.MODERATE)
    then
        drools.getKnowledgeRuntime().setGlobal("call1Threshold", -50 + 50 * numOfPlayersToAct);
        drools.getKnowledgeRuntime().setGlobal("call2Threshold",  50 + 50 * numOfPlayersToAct);
        drools.getKnowledgeRuntime().setGlobal("make1Threshold", -50 + 50 * numOfPlayersToAct);
        drools.getKnowledgeRuntime().setGlobal("make2Threshold",  50 + 50 * numOfPlayersToAct);
        drools.getKnowledgeRuntime().setGlobal("make4Threshold", 300);
end

rule "Determine thresholds - moderate and 4-5"
    when
        $ps: PlayerState(expectedNumOfPlayers <= 4, expectedNumOfPlayers > 2, playStyle == PlayStyle.MODERATE, $smallBlind: smallBlind)
    then
        drools.getKnowledgeRuntime().setGlobal("call1Threshold", !$smallBlind ? 50 + 25 * numOfPlayersToAct : -75);
        drools.getKnowledgeRuntime().setGlobal("call2Threshold", !$smallBlind ? 200 + 25 * numOfPlayersToAct : 200);
        drools.getKnowledgeRuntime().setGlobal("make1Threshold", 50 + 25 * numOfPlayersToAct);
        drools.getKnowledgeRuntime().setGlobal("make2Threshold", 200 + 25 * numOfPlayersToAct);
        drools.getKnowledgeRuntime().setGlobal("make4Threshold", 580);
end

rule "Determine thresholds - moderate and 5+"
    when
        $ps: PlayerState(expectedNumOfPlayers >= 5, playStyle == PlayStyle.MODERATE, $smallBlind: smallBlind)
    then
        drools.getKnowledgeRuntime().setGlobal("call1Threshold", !$smallBlind ? 50 * numOfPlayersToAct : 0);
        drools.getKnowledgeRuntime().setGlobal("call2Threshold", !$smallBlind ? 450 + 25 * numOfPlayersToAct : 450);
        drools.getKnowledgeRuntime().setGlobal("make1Threshold", 50 * numOfPlayersToAct);
        drools.getKnowledgeRuntime().setGlobal("make2Threshold", 450 + 25 * numOfPlayersToAct);
        drools.getKnowledgeRuntime().setGlobal("make4Threshold", 900);
end

rule "Determine thresholds - loose and 1-2"
    when
        $ps: PlayerState(expectedNumOfPlayers <= 2, playStyle == PlayStyle.LOOSE)
    then
        drools.getKnowledgeRuntime().setGlobal("call1Threshold", -50 + 50 * numOfPlayersToAct);
        drools.getKnowledgeRuntime().setGlobal("call2Threshold",  0);
        drools.getKnowledgeRuntime().setGlobal("make1Threshold", -50 + 50 * numOfPlayersToAct);
        drools.getKnowledgeRuntime().setGlobal("make2Threshold",  0);
        drools.getKnowledgeRuntime().setGlobal("make4Threshold", 300);
end

rule "Determine thresholds - loose and 4-5"
    when
        $ps: PlayerState(expectedNumOfPlayers <= 4, expectedNumOfPlayers > 2, playStyle == PlayStyle.LOOSE, $smallBlind: smallBlind)
    then
        drools.getKnowledgeRuntime().setGlobal("call1Threshold", !$smallBlind ? 50 + 10 * numOfPlayersToAct : -75);
        drools.getKnowledgeRuntime().setGlobal("call2Threshold", !$smallBlind ? 200 + 10 * numOfPlayersToAct : 200);
        drools.getKnowledgeRuntime().setGlobal("make1Threshold", 50 + 10 * numOfPlayersToAct);
        drools.getKnowledgeRuntime().setGlobal("make2Threshold", 200 + 10 * numOfPlayersToAct);
        drools.getKnowledgeRuntime().setGlobal("make4Threshold", 580);
end

rule "Determine thresholds - loose and 5+"
    when
        $ps: PlayerState(expectedNumOfPlayers >= 5, playStyle == PlayStyle.LOOSE, $smallBlind: smallBlind)
    then
        drools.getKnowledgeRuntime().setGlobal("call1Threshold", !$smallBlind ? 30 * numOfPlayersToAct : 0);
        drools.getKnowledgeRuntime().setGlobal("call2Threshold", !$smallBlind ? 450 + 10 * numOfPlayersToAct : 450);
        drools.getKnowledgeRuntime().setGlobal("make1Threshold", 30 * numOfPlayersToAct);
        drools.getKnowledgeRuntime().setGlobal("make2Threshold", 450 + 10 * numOfPlayersToAct);
        drools.getKnowledgeRuntime().setGlobal("make4Threshold", 900);
end


